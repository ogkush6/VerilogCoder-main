[{"id": "1", "content": "Define a 4-bit register to hold the current value of the decade counter. Initialize this register to 0 upon reset.\n\nRetrieved Related Information:\n- reset: input reset signal, active high synchronous\n- q: output 4-bit signal representing the decade counter value\n- On positive edge of clk, if reset is high, counter resets to 0.\n- On positive edge of clk, if reset is low and slowena is high, counter increments.\n- Counter counts from 0 through 9 and then wraps around to 0.\n\n", "source": "The reset input is active high synchronous, and should reset the counter to 0.", "parent_tasks": []}, {"id": "2", "content": "Implement logic to increment the counter by 1 when 'slowena' is high, but only if the current counter value is less than 9. If the counter reaches 9, it should wrap around to 0 on the next increment.\n\nRetrieved Related Information:\n- slowena: input enable signal, high indicates counter should increment.\n- q: output 4-bit signal representing the decade counter value.\n- On positive edge of clk, if reset is low and slowena is high, counter increments.\n- Counter counts from 0 through 9 and then wraps around to 0.\n- On positive edge of clk, if reset is high, counter resets to 0.\n\n", "source": "The module should implement a decade counter that counts from 0 through 9, inclusive, with a period of 10.", "parent_tasks": ["1"]}, {"id": "3", "content": "```\nConnect the 4-bit register to the output port 'q'.\n\nRetrieved Related Information:\nq: output 4-bit signal representing the decade counter value (Type:Signal)\n```\n", "source": "output q (4 bits)", "parent_tasks": ["2"]}]