[{"id": "1", "content": "Define a 4-bit register to hold the current state of the counter. Initialize this register to 4'b0001 to represent the number 1.\n\n", "source": "The module should implement a decade counter that counts 1 through 10, inclusive. Assume all sequential logic is triggered on the positive edge of the clock. The reset input is active high synchronous, and should reset the counter to 1.", "parent_tasks": []}, {"id": "2", "content": "Implement logic to increment the counter by 1 on each positive edge of the clock if the reset is not active. When the counter reaches 10 (4'b1010), it should wrap around to 1 (4'b0001) on the next clock edge.\n\nRetrieved Related Information:\n- clk: input clock signal (Type:Signal)\n- reset: input reset signal, active high synchronous (Type:Signal)\n- q: output signal (4 bits), represents the current count of the decade counter (Type:Signal)\n- On each positive edge of clk, if reset is high, set q to 1. (Type:StateTransition)\n- If reset is low, increment q by 1 until q reaches 10, then reset q to 1. (Type:StateTransition)\n\n", "source": "The module should implement a decade counter that counts 1 through 10, inclusive.", "parent_tasks": ["1"]}, {"id": "3", "content": "Implement synchronous reset logic that sets the counter to 1 (4'b0001) when the reset input is active high.\n\nRetrieved Related Information:\n- reset: input reset signal, active high synchronous (Type:Signal)\n- On each positive edge of clk, if reset is high, set q to 1. (Type:StateTransition)\n\n", "source": "The reset input is active high synchronous, and should reset the counter to 1.", "parent_tasks": ["2"]}, {"id": "4", "content": "Connect the 4-bit register to the output port q, so that the current value of the counter is always available at the output.\n\nRetrieved Related Information:\n- q: output signal (4 bits), represents the current count of the decade counter (Type:Signal)\n- On each positive edge of clk, if reset is high, set q to 1. (Type:StateTransition)\n- If reset is low, increment q by 1 until q reaches 10, then reset q to 1. (Type:StateTransition)\n\n", "source": "output q (4 bits)", "parent_tasks": ["3"]}]