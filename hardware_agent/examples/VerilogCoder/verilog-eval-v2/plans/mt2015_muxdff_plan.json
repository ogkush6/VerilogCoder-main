[{"id": "1", "content": "Define the module TopModule with the necessary inputs and outputs. The inputs are clk, L, q_in, r_in and the output is Q.\n\nRetrieved Related Information:\n- clk: input signal\n- L: input signal\n- q_in: input signal\n- r_in: input signal\n- Q: output signal\n- always @(posedge clk) begin\n- output reg [2:0] q\n- if (L) begin\n- q <= r;\n- q <= {q[1] ^ q[2], q[0], q[2]};\n- end\n\n", "source": "You want to create a hierarchical Verilog design where a flipflop and 2-1 multiplexer are in a submodule named TopModule, and that submodule is instantiated three times this code. You only need to implement the submodule 'TopModule' that has a flipflop and 2-1 multiplexer.", "parent_tasks": []}, {"id": "2", "content": "Implement the flipflop in the TopModule. The flipflop should be triggered by the positive edge of the clk signal. The input to the flipflop is q_in and the output is Q.\n\nRetrieved Related Information:\n- clk: input signal\n- q_in: input signal\n- Q: output signal\n- always @(posedge clk) begin\n- output reg [2:0] q\n- q <= r;\n- q <= {q[1] ^ q[2], q[0], q[2]};\n- end\n\n", "source": "You want to create a hierarchical Verilog design where a flipflop and 2-1 multiplexer are in a submodule named TopModule, and that submodule is instantiated three times this code. You only need to implement the submodule 'TopModule' that has a flipflop and 2-1 multiplexer.", "parent_tasks": ["1"]}, {"id": "3", "content": "Implement the 2-1 multiplexer in the TopModule. The select line of the multiplexer is the L signal. The inputs to the multiplexer are r_in and the output of the flipflop. The output of the multiplexer is the input to the flipflop.\n\nRetrieved Related Information:\n- L: input signal (Type:Signal)\n- r_in: input signal (Type:Signal)\n- if (L) begin (Type:StateTransition)\n- output reg [2:0] q (Type:SignalExample)\n- always @(posedge clk) begin (Type:StateTransition)\n- q <= r; (Type:StateTransition)\n\n", "source": "You want to create a hierarchical Verilog design where a flipflop and 2-1 multiplexer are in a submodule named TopModule, and that submodule is instantiated three times this code. You only need to implement the submodule 'TopModule' that has a flipflop and 2-1 multiplexer.", "parent_tasks": ["2"]}]