[{"id": "1", "content": "Define the module TopModule with input ports a, b, sel_b1, sel_b2 and output ports out_assign, out_always.\n\nRetrieved Related Information:\n- a: 1-bit input signal\n- b: 1-bit input signal\n- sel_b1: 1-bit input signal used to select b\n- sel_b2: 1-bit input signal used to select b\n- out_assign: 1-bit output signal, result of 2-to-1 mux using assign statement\n- out_always: 1-bit output signal, result of 2-to-1 mux using procedural if statement\n- Choose b if both sel_b1 and sel_b2 are true. Otherwise, choose a.\n\n", "source": "input  a, input  b, input  sel_b1, input  sel_b2, output out_assign, output out_always", "parent_tasks": []}, {"id": "2", "content": "Implement the logic for out_assign using an assign statement. The output should select 'b' if both sel_b1 and sel_b2 are true, otherwise select 'a'.\n\nRetrieved Related Information:\n- a: 1-bit input signal\n- b: 1-bit input signal\n- sel_b1: 1-bit input signal used to select b\n- sel_b2: 1-bit input signal used to select b\n- out_assign: 1-bit output signal, result of 2-to-1 mux using assign statement\n- Choose b if both sel_b1 and sel_b2 are true. Otherwise, choose a.\n\n", "source": "Choose b if both sel_b1 and sel_b2 are true. Otherwise, choose a.", "parent_tasks": ["1"]}, {"id": "3", "content": "Implement the logic for out_always using an always block with a procedural if statement. The output should behave the same as out_assign, selecting 'b' if both sel_b1 and sel_b2 are true, otherwise 'a'.\n\nRetrieved Related Information:\n- b: 1-bit input signal\n- sel_b1: 1-bit input signal used to select b\n- sel_b2: 1-bit input signal used to select b\n- out_assign: 1-bit output signal, result of 2-to-1 mux using assign statement\n- out_always: 1-bit output signal, result of 2-to-1 mux using procedural if statement\n- Choose b if both sel_b1 and sel_b2 are true. Otherwise, choose a. (Type:StateTransition)\n\n", "source": "Choose b if both sel_b1 and sel_b2 are true. Otherwise, choose a.", "parent_tasks": ["2"]}]