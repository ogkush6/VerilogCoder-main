[{"id": "1", "content": "Define the module TopModule with the specified interface including clk, ar, d as inputs and q as output.\n\nRetrieved Related Information:\n- clk: input clock signal (Type:Signal)\n- ar: input asynchronous reset (Type:Signal)\n- d: input data signal (Type:Signal)\n- q: output data signal (Type:Signal)\n- On the positive edge of clk, if ar is high, q is reset to 0. (Type:StateTransition)\n- On the positive edge of clk, if ar is low, q follows d. (Type:StateTransition)\n\n", "source": "input  clk, input  ar, input  d, output q", "parent_tasks": []}, {"id": "2", "content": "Implement a D flip-flop with a positive edge-triggered clock behavior. The flip-flop should capture the input 'd' on the rising edge of 'clk'.\n\nRetrieved Related Information:\n- clk: input clock signal (Type:Signal)\n- d: input data signal (Type:Signal)\n- q: output data signal (Type:Signal)\n- On the positive edge of clk, if ar is high, q is reset to 0. (Type:StateTransition)\n- On the positive edge of clk, if ar is low, q follows d. (Type:StateTransition)\n\n", "source": "The module should implement a D flip flop, positive edge triggered", "parent_tasks": ["1"]}, {"id": "3", "content": "Add an asynchronous reset functionality to the D flip-flop. When 'ar' is high, the output 'q' should be reset to 0 regardless of the clock edge.\n\nRetrieved Related Information:\n- ar: input asynchronous reset (Type:Signal)\n- q: output data signal (Type:Signal)\n- On the positive edge of clk, if ar is high, q is reset to 0. (Type:StateTransition)\n- On the positive edge of clk, if ar is low, q follows d. (Type:StateTransition)\n\n", "source": "with an asynchronous reset 'ar'", "parent_tasks": ["2"]}]