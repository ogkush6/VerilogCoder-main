[{"id": "1", "content": "Implement the logic for 'shut_off_computer' output. This signal should be set to 1 when 'cpu_overheated' input is true. Ensure that 'shut_off_computer' is properly reset or maintained in other conditions.\n\nRetrieved Related Information:\n- cpu_overheated: Input signal indicating if the CPU is overheated (Type:Signal)\n- shut_off_computer: Output register signal to shut off the computer when CPU is overheated (Type:Signal)\n- if (cpu_overheated) shut_off_computer = 1; (Type:StateTransition)\n\n", "source": "if (cpu_overheated) shut_off_computer = 1;", "parent_tasks": []}, {"id": "2", "content": "Implement the logic for 'keep_driving' output. This signal should be controlled based on the 'arrived' and 'gas_tank_empty' inputs. If 'arrived' is false and 'gas_tank_empty' is false, then 'keep_driving' should be true. In all other cases, 'keep_driving' should be false.\n\nRetrieved Related Information:\n- arrived: Input signal indicating if the destination has been reached.\n- gas_tank_empty: Input signal indicating if the gas tank is empty.\n- keep_driving: Output register signal to control whether to keep driving or not.\n- if (~arrived) keep_driving = ~gas_tank_empty; (Type:StateTransition)\n\n", "source": "if (~arrived) keep_driving = ~gas_tank_empty;", "parent_tasks": ["1"]}]