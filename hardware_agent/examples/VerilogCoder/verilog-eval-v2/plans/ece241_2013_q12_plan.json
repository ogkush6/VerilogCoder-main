[{"id": "1", "content": "```\nImplement an 8-bit shift register using D-type flip-flops. The input to the first flip-flop (Q[0]) should be the input signal S. Each subsequent flip-flop should take the output of the previous flip-flop as its input. The shifting operation should only occur when the enable signal is high.\n\nRetrieved Related Information:\n- enable: Control signal to allow shifting in the shift register.\n- S: Serial data input for the shift register.\n- Q[0]: Output of the first flip-flop in the shift register.\n- Q[1]: Output of the second flip-flop in the shift register.\n- Q[2]: Output of the third flip-flop in the shift register.\n- Q[3]: Output of the fourth flip-flop in the shift register.\n- Q[4]: Output of the fifth flip-flop in the shift register.\n- Q[5]: Output of the sixth flip-flop in the shift register.\n- Q[6]: Output of the seventh flip-flop in the shift register.\n- Q[7]: Output of the eighth flip-flop in the shift register.\n- When enable is high, on the positive edge of clk, the shift register shifts in the bit from S into Q[0], and each subsequent Q[n] receives the bit from Q[n-1].\n```\n", "source": "First, create an 8-bit shift register with 8 D-type flip-flops. Label the flip-flop outputs from Q[0]...Q[7]. The shift register input should be called S, which feeds the input of Q[0] (MSB is shifted in first). The enable input is synchronous active high and controls whether to shift.", "parent_tasks": []}, {"id": "2", "content": "Implement a multiplexer to select one of the 8 outputs from the shift register based on the 3-bit input combination from A, B, and C. The selected output should be assigned to the output Z.\n\nRetrieved Related Information:\n- A: Address input bit 0 for selecting output.\n- B: Address input bit 1 for selecting output.\n- C: Address input bit 2 for selecting output.\n- Z: Output of the memory based on address inputs A, B, C.\n- When ABC is 000, Z=Q[0].\n- When ABC is 001, Z=Q[1].\n- When ABC is 010, Z=Q[2].\n- When ABC is 011, Z=Q[3].\n- When ABC is 100, Z=Q[4].\n- When ABC is 101, Z=Q[5].\n- When ABC is 110, Z=Q[6].\n- When ABC is 111, Z=Q[7].\n- When enable is high, on the positive edge of clk, the shift register shifts in the bit from S into Q[0], and each subsequent Q[n] receives the bit from Q[n-1].\n\n", "source": "Extend the circuit to have 3 additional inputs A,B,C and an output Z. The circuit's behaviour should be as follows: when ABC is 000, Z=Q[0], when ABC is 001, Z=Q[1], and so on.", "parent_tasks": ["1"]}]