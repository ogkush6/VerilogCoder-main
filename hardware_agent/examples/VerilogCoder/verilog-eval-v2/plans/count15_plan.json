[{"id": "1", "content": "Define a 4-bit register to hold the current state of the counter. This register will be updated on each positive edge of the clock and will be reset when the reset signal is high.\n\nRetrieved Related Information:\n- clk: input clock signal (Type:Signal)\n- reset: input reset signal, active high synchronous (Type:Signal)\n- q: output 4-bit counter value (Type:Signal)\n- On each positive edge of clk, if reset is high, q is set to 0. (Type:StateTransition)\n- If reset is low, q increments by 1 until it reaches 15, then wraps around to 0. (Type:StateTransition)\n\n", "source": "The module should implement a 4-bit binary counter that counts from 0 through 15, inclusive, with a period of 16. Assume all sequential logic is triggered on the positive edge of the clock. The reset input is active high synchronous, and should reset the counter to 0.", "parent_tasks": []}, {"id": "2", "content": "Implement the logic to increment the counter. On each positive edge of the clock, if the reset is not active, increment the counter by 1. If the counter reaches 15, it should wrap around to 0 on the next increment.\n\nRetrieved Related Information:\n- clk: input clock signal (Type:Signal)\n- reset: input reset signal, active high synchronous (Type:Signal)\n- q: output 4-bit counter value (Type:Signal)\n- On each positive edge of clk, if reset is high, q is set to 0. (Type:StateTransition)\n- If reset is low, q increments by 1 until it reaches 15, then wraps around to 0. (Type:StateTransition)\n\n", "source": "The module should implement a 4-bit binary counter that counts from 0 through 15, inclusive, with a period of 16.", "parent_tasks": ["1"]}, {"id": "3", "content": "Connect the 4-bit output of the counter register to the output port 'q'. This will allow the current value of the counter to be outputted from the module.\n\nRetrieved Related Information:\n- q: output 4-bit counter value (Type:Signal)\n- On each positive edge of clk, if reset is high, q is set to 0. (Type:StateTransition)\n- If reset is low, q increments by 1 until it reaches 15, then wraps around to 0. (Type:StateTransition)\n\n", "source": "output q (4 bits)", "parent_tasks": ["2"]}]