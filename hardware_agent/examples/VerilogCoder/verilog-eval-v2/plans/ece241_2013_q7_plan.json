[{"id": "1", "content": "Define a register to hold the current state of the output Q.\n\n", "source": "The module should implement a JK flip-flop with the following truth table. Note: Qold is the output of the flip-flop before the positive clock edge.", "parent_tasks": []}, {"id": "2", "content": "Implement the logic for the JK flip-flop when J=0 and K=0 to maintain the current state of Q (Qold).\n\nRetrieved Related Information:\n- J = 0, K = 0 -> Q = Qold (Type:StateTransition)\n\n", "source": "J | K | Q\n0 | 0 | Qold", "parent_tasks": ["1"]}, {"id": "3", "content": "Implement the logic for the JK flip-flop when J=0 and K=1 to set the output Q to 0.\n\nRetrieved Related Information:\n- J = 0, K = 1 -> Q = 0 (Type:StateTransition)\n\n", "source": "J | K | Q\n0 | 1 | 0", "parent_tasks": ["2"]}, {"id": "4", "content": "Implement the logic for the JK flip-flop when J=1 and K=0 to set the output Q to 1.\n\nRetrieved Related Information:\n- J = 1, K = 0 -> Q = 1 (Type:StateTransition)\n\n", "source": "J | K | Q\n1 | 0 | 1", "parent_tasks": ["3"]}, {"id": "5", "content": "Implement the logic for the JK flip-flop when J=1 and K=1 to toggle the current state of Q (Qold).\n\nRetrieved Related Information:\n- J = 1, K = 1 -> Q = ~Qold (Type:StateTransition)\n\n", "source": "J | K | Q\n1 | 1 | ~Qold", "parent_tasks": ["4"]}, {"id": "6", "content": "Connect the implemented logic to the positive edge-triggered clock signal to update the state of Q only on the rising edge of the clock.\n\nRetrieved Related Information:\nclk: input clock signal (Type:Signal)\n\n", "source": "The module should implement a JK flip-flop with the following truth table. Note: Qold is the output of the flip-flop before the positive clock edge.", "parent_tasks": ["5"]}]