[{"id": "1", "content": "Define the TopModule with the specified inputs and outputs.\n\nRetrieved Related Information:\n- clk: input clock signal\n- areset: input asynchronous reset signal, positive edge triggered\n- bump_left: input signal indicating a bump on the left\n- bump_right: input signal indicating a bump on the right\n- aaah: output signal indicating falling\n- If areset is 1, then transition to walking left state\n- If ground is 0, then output aaah is 1\n- If walking left and bump_left is 1, then transition to walking right state\n- If ground transitions from 0 to 1, resume previous walking state\n- Being bumped while ground is 0 does not change the walking direction\n- Being bumped when the ground reappears while still falling does not affect the walking direction\n- If walking right and bump_right is 1, then transition to walking left state\n- Being bumped in the same cycle as ground disappears does not affect the walking direction\n\n", "source": "input clk, input areset, input bump_left, input bump_right, input ground, output walk_left, output walk_right, output aaah", "parent_tasks": []}, {"id": "2", "content": "Implement the output logic for walk_left and walk_right based on the current state and bump inputs.\n\nRetrieved Related Information:\n- If areset is 1, then transition to walking left state.\n- If walking left and bump_left is 1, then transition to walking right state.\n- If walking right and bump_right is 1, then transition to walking left state.\n- Being bumped while ground is 0 does not change the walking direction.\n- Being bumped when the ground reappears while still falling does not affect the walking direction.\n- Being bumped in the same cycle as ground disappears does not affect the walking direction.\n\n", "source": "if a Lemming is bumped on the left (by receiving a 1 on bump_left) when walking left, it will switch to walking right state. If it's bumped on the right (by receiving a 1 on bump_right) when walking right, it will switch to walking left.", "parent_tasks": ["1"]}, {"id": "3", "content": "Implement the logic for the aaah output when the ground disappears and maintain it until the ground reappears.\n\nRetrieved Related Information:\n- If ground is 0, then output aaah is 1 (Type:StateTransition)\n\n", "source": "when ground=0, the Lemming will fall and say 'aaah!'. When the ground reappears (ground=1), the Lemming will resume walking in the same direction as before the fall.", "parent_tasks": ["2"]}, {"id": "4", "content": "Implement the asynchronous reset logic to set the Lemming to walk left on areset.\n\nRetrieved Related Information:\n- areset: input asynchronous reset signal, positive edge triggered (Type:Signal)\n- If areset is 1, then transition to walking left state (Type:StateTransition)\n\n", "source": "areset is positive edge triggered asynchronous reseting the Lemming machine to walk left.", "parent_tasks": ["3"]}]