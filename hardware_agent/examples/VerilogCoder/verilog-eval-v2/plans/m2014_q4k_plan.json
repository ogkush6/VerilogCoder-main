[{"id": "1", "content": "Define a 4-bit register to implement the shift register functionality. Initialize all bits to 0.\n\n", "source": "The module should implement a shift register with four D flops.", "parent_tasks": []}, {"id": "2", "content": "Implement the logic to shift the input 'in' into the first D flip-flop of the shift register on each positive edge of the clock, while shifting the current contents of the shift register to the right.\n\nRetrieved Related Information:\n- clk: Clock input (Type:Signal)\n- in: Input signal (Type:Signal)\n- All sequential logic is triggered on the positive edge of the clock. (Type:StateTransition)\n- Reset is active-low synchronous resettable. (Type:StateTransition)\n\n", "source": "The module should implement a shift register with four D flops. Assume all sequential logic is triggered on the positive edge of the clock.", "parent_tasks": ["1"]}, {"id": "3", "content": "```\nImplement synchronous reset logic that sets all bits of the shift register to 0 when 'resetn' is low.\n\nRetrieved Related Information:\n- resetn: Active-low synchronous reset (Type:Signal)\n- Reset is active-low synchronous resettable. (Type:StateTransition)\n```\n", "source": "Reset is active-low synchronous resettable.", "parent_tasks": ["2"]}, {"id": "4", "content": "Connect the output of the last D flip-flop in the shift register to the output port 'out'.\n\nRetrieved Related Information:\nout: Output signal (Type:Signal)\n\n", "source": "output out", "parent_tasks": ["3"]}]