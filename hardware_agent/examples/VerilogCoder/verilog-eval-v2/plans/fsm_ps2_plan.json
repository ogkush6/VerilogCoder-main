[{"id": "1", "content": "Define an enumerated type for the FSM states with three states: IDLE, BYTE1, BYTE2. IDLE is the initial state where the FSM waits for a byte with in[3]=1. BYTE1 is the state indicating the first byte of the message has been received. BYTE2 indicates that the second byte of the message has been received.\n\n", "source": "The PS/2 mouse protocol sends messages that are three bytes long. However, within a continuous byte stream, it's not obvious where messages start and end. The only indication is that the first byte of each three byte message always has in[3]=1.", "parent_tasks": []}, {"id": "2", "content": "Implement a synchronous reset logic for the FSM state register. When reset is asserted, the FSM should transition to the IDLE state.\n\nRetrieved Related Information:\n- reset: Active high synchronous reset input (Type:Signal)\n\n", "source": "Reset should be active high synchronous.", "parent_tasks": ["1"]}, {"id": "3", "content": "Implement the FSM state transitions based on the input byte in. In the IDLE state, if in[3]=1, transition to BYTE1. In BYTE1, transition to BYTE2 regardless of in[3]. In BYTE2, transition back to IDLE regardless of in[3].\n\nRetrieved Related Information:\n- in: 8-bit input data stream (Type:Signal)\n- Discard bytes until a byte with in[3]=1 is detected. (Type:StateTransition)\n- Assume the byte with in[3]=1 as the first byte of a message. (Type:StateTransition)\n- Receive two more bytes to complete the message. (Type:StateTransition)\n- Signal 'done' immediately after the third byte is received. (Type:StateTransition)\n\n", "source": "The only indication is that the first byte of each three byte message always has in[3]=1 (but in[3] of the other two bytes may be 1 or 0 depending on data).", "parent_tasks": ["2"]}, {"id": "4", "content": "```\nImplement the done signal logic. The done signal should be asserted for one cycle immediately after the FSM transitions from BYTE2 to IDLE, indicating that a complete message has been received.\n\nRetrieved Related Information:\ndone: Output signal that indicates the end of a three-byte message (Type:Signal)\nSignal 'done' immediately after the third byte is received. (Type:StateTransition)\n```\n", "source": "The FSM should signal done in the cycle immediately after the third byte of each message was successfully received.", "parent_tasks": ["3"]}]