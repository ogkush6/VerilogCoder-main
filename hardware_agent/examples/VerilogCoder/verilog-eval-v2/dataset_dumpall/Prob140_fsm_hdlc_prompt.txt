
I would like you to implement a module named TopModule with the following
interface. All input and output ports are one bit unless otherwise
specified.

 - input  clk
 - input  reset
 - input  in
 - output disc
 - output flag
 - output err

Synchronous HDLC framing involves decoding a continuous bit stream of
data to look for bit patterns that indicate the beginning and end of
frames (packets). Seeing exactly 6 consecutive value 1 (i.e., 01111110) is a
"flag" that indicate frame boundaries and the FSM set flag to 1 for a clock 
cycle. After receiving the last 0 after receiving 6 consecutive value 1, the 
FSM goes to flag state and assert flag signal. After a clock cycle, the FSM 
goes back to recount the consecutive value 1. If in=1 at flag state, the 1 needs 
to be added to the next consecutive 1 couting.
To avoid the data stream from accidentally containing "flags" in the wrong 
position, the sender inserts a 0 after every 5 consecutive value 1. When 
receiving a 0 after 5 consecutive value 1, the FSM goes to disc state to assert 
disc output. After a clock cycle, the FSM goes back to recount the consecutive value 1. 
If in=1 at disc state, the 1 needs to be added to the next consecutive 1 couting.
We also need to signal an error if there are 7 or more consecutive value 1. 
Wehn receiving a 1 after receiving 6 consecutive value 1, the FSM goes to error state 
and assert `err` to 1. When in error state, the FSM will remain in error state when in=1, 
on the other hand, if in=0, the FSM goes back to moniter the next consecutive value 1 
pattern from input in from the beginning state.
Create a Moore-type finite state machine to recognize these three sequences:

  (1) 0111110: Signal a bit needs to be discarded (disc).
  (2) 01111110: Flag the beginning/end of a frame (flag).
  (3) 01111111...: Error (7 or more 1s) (err).

When the FSM is reset, it should be in a state that behaves as though the
previous input were 0. The reset signal is active high synchronous. Assume all 
sequential logic is triggered on the positive edge of the clock.

