.docusaurus/
node_modules/
# Project
/.vs
.vscode

# Log files
*.log

# Python virtualenv
.venv*

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

logs

.idea/*
.DS_Store

output/
*.pkl

# local config files
*.config.local
OAI_CONFIG_LIST
OS_CONFIG_LIST
key_openai.txt
key_aoai.txt
base_aoai.txt
wolfram.txt

# DB on disk for Teachability
db/
tmp/
test/my_tmp/*

# Storage for the AgentEval output
test/test_files/agenteval-in-out/out/

# local cache or coding foler
local_cache/
coding/

# Files created by tests
*tmp_code_*
test/agentchat/test_agent_scripts/*

# test cache
.cache_test
.db
local_cache


notebook/result.png
samples/apps/autogen-studio/autogenstudio/models/test/

notebook/coding

# parsed json files from nanotime
hardware_agent/examples/NanotimeAgent/temp_files/*

# output jsons for cad swe agent
hardware_agent/examples/CAD_Intern/workspace/sample_outputs/*

EMBED_CONFIG.json
EMBED_CONFIG_local.json
OAI_CONFIG_LIST_DAR
.chainlit/
autogen/oai/client.py
kb_storage/hardware_agent/examples/fv/debug/data/cex-bench/uart_rx/temp_*
hardware_agent/examples/fv/debug/data/cex-bench/uart_rx/temp_1736531546/
kb_storage/
hardware_agent/examples/fv/debug/data/AutoSVA/
hardware_agent/examples/fv/debug/data/formal_sva.zip
hardware_agent/examples/fv/debug/data/formal_sva/
hardware_agent/examples/fv/debug/src/test_p4/
hardware_agent/examples/fv/debug/src/output_trace/
hardware_agent/examples/fv/debug/src/trace_output_dir/
hardware_agent/examples/fv/debug/src/debug/

hardware_agent/generalist_agent/tools/graphrag/verilogtest/
hardware_agent/generalist_agent/tools/graphrag/.semversioner

hardware_agent/generalist_agent/tools/graphrag/tests

hardware_agent/generalist_agent/tools/graphrag/docsite
hardware_agent/generalist_agent/tools/graphrag/.github
hardware_agent/generalist_agent/tools/graphrag/workspace/
hardware_agent/examples/fv_backup/hardware_agent/examples/fv/
hardware_agent/examples/fv/
hardware_agent/examples/fv_backup/
hardware_agent/examples/fv_backup/autogen/oai/client_with_secrets.py
